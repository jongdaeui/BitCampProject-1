회원가입시 - 중복된 값으로 회원가입 시도 시 재시도 여부 추가 구현

======================================================================
데이터 베이스 총정리 작성!!!!
모든 테이블 삭제 후 제약 조건 정리해서 다시 CREATE 및 INSERT 하기

1. BOOK 테이블
   BOOK_ID NUMBER NOT NULL PRIMARY KEY
 CINEMA_ID NUMBER NOT NULL 참조 CINEMA (CINEMA_ID)
  MOVIE_ID NUMBER NOT NULL 참조 MOVIE_INFO (MOVIE_ID)
 MEMBER_NO NUMBER NOT NULL 참조 MEMBER (MEMBER_NO)
  PRICE    NUMBER NOT NULL 
   TIME_ID NUMBER NOT NULL 참조 TIMETABLE (TIME_ID)

2. CINEMA 테이블
 CINEMA_ID NUMBER        PRIMARY KEY
 REGION    VARCHAR2 (45) NOT NULL
 C_PHONE   VARCHAR2 (45) NOT NULL

3. MEMBER 테이블
   MEMBER_NO NUMBER       PRIMARY KEY
   MEMBER_ID VARCHAR2 (45) NOT NULL UNIQUE KEY
 MEMBER_NAME VARCHAR2 (45) NOT NULL
    PASSWORD VARCHAR2 (45) NOT NULL
       PHONE VARCHAR2 (45) 
       EMAIL VARCHAR2 (100)

4. MOVIEINFO 테이블
 MOVIE_ID NUMBER         PRIMARY KEY
    TITLE VARCHAR2 (100) NOT NULL
    STORY VARCHAR2 (100) NOT NULL
    GRADE VARCHAR2 (45)  NOT NULL

5. TIMETABLE 테이블
    TIME_ID NUMBER PRIMARY KEY
   MOVIE_ID NUMBER NOT NULL 참조 MOVIEINFO (MOVIE_ID)
  CINEMA_ID NUMBER NOT NULL 참조 CINEMA (CINEMA_ID)
SCREEN_DATE VARCHAR2 (45) NOT NULL
SCREEN_TIME VARCHAR2 (45) NOT NULL
 
 - 전체 조회 뷰 -
SELECT 
    B.BOOK_ID "RESERVATION NUMBER", B.PRICE "PAYMENT", M.MEMBER_ID "ACCOUNT", M.MEMBER_NAME "USER_NAME", MI.TITLE "TITLE",
    MI.GRADE "GRADE", C.REGION "BRANCH", T.SCREEN_DATE "SCREEN_DATE", T.SCREEN_TIME "SCREEN_TIME"
FROM 
    BOOK B, CINEMA C, MEMBER M, MOVIEINFO MI, TIMETABLE T
WHERE B.CINEMA_ID = C.CINEMA_ID
  AND B.MEMBER_NO = M.MEMBER_NO
  AND B.MOVIE_ID = MI.MOVIE_ID
  AND B.TIME_ID = T.TIME_ID





===================================================================


MovieViewer 시작시 List 파라미터 삭제 후 메소드 내부에 새로운 객체 생성

MovieViewer 에서 영화 정보 출력 메세지 수정